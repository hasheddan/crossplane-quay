---
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: InfrastructureDefinition
metadata:
  name: redisclusters.cache.example.org
spec:
  connectionSecretKeys:
    - hostname
    - port
  crdSpecTemplate:
    group: cache.example.org
    version: v1alpha1
    names:
      kind: RedisCluster
      listKind: RedisClusterList
      plural: redisclusters
      singular: rediscluster
    validation:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
---
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: InfrastructurePublication
metadata:
  name: redisclusters.cache.example.org
spec:
  infrastructureDefinitionRef:
    name: redisclusters.cache.example.org
---
apiVersion: apiextensions.crossplane.io/v1alpha1
kind: Composition
metadata:
  name: vpcredisclusters.aws.cache.example.org
  labels:
    provider: aws
    guide: quickstart
    vpc: {{ .Values.vpcId }}
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  reclaimPolicy: Delete
  from:
    apiVersion: cache.example.org/v1alpha1
    kind: RedisCluster
  to:
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            desc: redis
            zone: {{ printf "%sa" .Values.region }}
        spec:
          forProvider:
            cidrBlock: 10.0.99.0/24
            vpcId: {{ .Values.vpcId }}
            availabilityZone: {{ printf "%sa" .Values.region }}
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            desc: redis
            zone: {{ printf "%sb" .Values.region }}
        spec:
          forProvider:
            cidrBlock: 10.0.100.0/24
            vpcId: {{ .Values.vpcId }}
            availabilityZone: {{ printf "%sb" .Values.region }}
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            desc: redis
            zone: {{ printf "%sc" .Values.region }}
        spec:
          forProvider:
            cidrBlock: 10.0.101.0/24
            vpcId: {{ .Values.vpcId }}
            availabilityZone: {{ printf "%sc" .Values.region }}
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
    - base:
        apiVersion: cache.aws.crossplane.io/v1alpha1
        kind: CacheSubnetGroup
        spec:
          forProvider:
            description: An excellent formation of subnetworks.
            subnetIdSelector:
              matchControllerRef: true
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
    - base:
        apiVersion: ec2.aws.crossplane.io/v1alpha4
        kind: RouteTable
        spec:
          forProvider:
            vpcId: {{ .Values.vpcId }}
            routes:
              - destinationCidrBlock: 0.0.0.0/0
                gatewayId: {{ .Values.igwId }}
            associations:
              - subnetIdSelector:
                  matchLabels:
                    desc: redis
                    zone: {{ printf "%sa" .Values.region }}
              - subnetIdSelector:
                  matchLabels:
                    desc: redis
                    zone: {{ printf "%sb" .Values.region }}
              - subnetIdSelector:
                  matchLabels:
                    desc: redis
                    zone: {{ printf "%sc" .Values.region }}
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
    - base:
        apiVersion: ec2.aws.crossplane.io/v1beta1
        kind: SecurityGroup
        spec:
          forProvider:
            vpcId: {{ .Values.vpcId }}
            groupName: crossplane-redis
            description: Allow access to Redis
            ingress:
            - fromPort: 6379
              toPort: 6379
              ipProtocol: tcp
              ipRanges:
              - cidrIp: 0.0.0.0/0
                description: Everywhere
            egress:
            - fromPort: 6379
              toPort: 6379
              ipProtocol: tcp
              ipRanges:
              - cidrIp: 0.0.0.0/0
                description: Everywhere
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
    - base:
        apiVersion: cache.aws.crossplane.io/v1beta1
        kind: ReplicationGroup
        spec:
          forProvider:
            cacheNodeType: cache.t3.medium
            applyModificationsImmediately: true
            engine: redis
            replicationGroupDescription: redis cluster for Quay
            cacheSubnetGroupNameSelector:
              matchControllerRef: true
            securityGroupIdSelector:
              matchControllerRef: true
          writeConnectionSecretToRef:
            namespace: crossplane-system
            name: redis-internal-secret
          providerRef:
            name: aws-provider
          reclaimPolicy: Delete
      connectionDetails:
        - name: hostname
          fromConnectionSecretKey: endpoint
        - fromConnectionSecretKey: port
